
> synergy@0.0.0 start /home/daverous/CSC309Project/ws1/synergy
> nodemon ./bin/www

10 Mar 15:49:22 - [33m[nodemon] v1.3.7[39m
10 Mar 15:49:22 - [33m[nodemon] to restart at any time, enter `rs`[39m
10 Mar 15:49:22 - [33m[nodemon] watching: *.*[39m
10 Mar 15:49:22 - [32m[nodemon] starting `node ./bin/www`[39m
{ _readableState: 
   { highWaterMark: 16384,
     buffer: [ <Buffer 2d 2d 2d 2d 2d 2d 57 65 62 4b 69 74 46 6f 72 6d 42 6f 75 6e 64 61 72 79 63 4c 4b 4c 59 36 67 6e 51 4f 41 59 61 44 49 73 0d 0a 43 6f 6e 74 65 6e 74 2d 44 ...> ],
     length: 475,
     pipes: null,
     pipesCount: 0,
     flowing: false,
     ended: true,
     endEmitted: false,
     reading: false,
     calledRead: false,
     sync: true,
     needReadable: false,
     emittedReadable: true,
     readableListening: false,
     objectMode: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: {},
  _maxListeners: 10,
  socket: 
   { _connecting: false,
     _handle: 
      { fd: 16,
        writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread],
        reading: true },
     _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: true,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     onend: [Function],
     destroyed: false,
     bytesRead: 1145,
     _bytesDispatched: 2550,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        _connections: 3,
        connections: [Getter/Setter],
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        allowHalfOpen: true,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _connectionKey: '4:0.0.0.0:3000' },
     _idleTimeout: 120000,
     _idleNext: 
      { [Function: utcDate]
        _onTimeout: [Function],
        _idleTimeout: 991,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 1426016970010,
        _monotonicStartTime: 1606696 },
     _idlePrev: { _idleNext: [Circular], _idlePrev: [Object] },
     _idleStart: 1426016970010,
     _monotonicStartTime: 1606696,
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: true,
        _header: 'HTTP/1.1 200 OK\r\nX-Powered-By: Express\r\nContent-Type: text/html; charset=utf-8\r\nContent-Length: 2224\r\nETag: W/"4tPwNBBFJfQJ3q91pd8Bwg=="\r\nset-cookie: connect.sid=s%3AcUzrHQ1s8Ob4uXw_pWdAGewEnCbFi2lM.tsRIsiWULNF%2FJZ7xV6iokDfOnSVJ7Jk60DCstBx6YYE; Path=/; HttpOnly\r\nDate: Tue, 10 Mar 2015 19:49:30 GMT\r\nConnection: keep-alive\r\n\r\n',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        __onFinished: [Object],
        writeHead: [Function: writeHead],
        end: [Function: end],
        statusCode: 200 },
     _peername: { address: '127.0.0.1', family: 'IPv4', port: 45011 } },
  connection: 
   { _connecting: false,
     _handle: 
      { fd: 16,
        writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread],
        reading: true },
     _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: true,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     onend: [Function],
     destroyed: false,
     bytesRead: 1145,
     _bytesDispatched: 2550,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        _connections: 3,
        connections: [Getter/Setter],
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        allowHalfOpen: true,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _connectionKey: '4:0.0.0.0:3000' },
     _idleTimeout: 120000,
     _idleNext: 
      { [Function: utcDate]
        _onTimeout: [Function],
        _idleTimeout: 991,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 1426016970010,
        _monotonicStartTime: 1606696 },
     _idlePrev: { _idleNext: [Circular], _idlePrev: [Object] },
     _idleStart: 1426016970010,
     _monotonicStartTime: 1606696,
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: true,
        _header: 'HTTP/1.1 200 OK\r\nX-Powered-By: Express\r\nContent-Type: text/html; charset=utf-8\r\nContent-Length: 2224\r\nETag: W/"4tPwNBBFJfQJ3q91pd8Bwg=="\r\nset-cookie: connect.sid=s%3AcUzrHQ1s8Ob4uXw_pWdAGewEnCbFi2lM.tsRIsiWULNF%2FJZ7xV6iokDfOnSVJ7Jk60DCstBx6YYE; Path=/; HttpOnly\r\nDate: Tue, 10 Mar 2015 19:49:30 GMT\r\nConnection: keep-alive\r\n\r\n',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        __onFinished: [Object],
        writeHead: [Function: writeHead],
        end: [Function: end],
        statusCode: 200 },
     _peername: { address: '127.0.0.1', family: 'IPv4', port: 45011 } },
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: '127.0.0.1:3000',
     connection: 'keep-alive',
     'content-length': '475',
     'cache-control': 'max-age=0',
     accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
     origin: 'http://127.0.0.1:3000',
     'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2272.76 Safari/537.36',
     'content-type': 'multipart/form-data; boundary=----WebKitFormBoundarycLKLY6gnQOAYaDIs',
     referer: 'http://127.0.0.1:3000/addRental',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'en-GB,en;q=0.8,de;q=0.6,en-US;q=0.4',
     cookie: 'connect.sid=s%3AjLyU9adFpqPkm3VV-AI7v9nlvWCYQ_AI.P5aIo8jBNJiCKzLcsBB1Zj93KCLCeA%2F5hjHDdyKdj1M' },
  trailers: {},
  _pendings: [],
  _pendingIndex: 0,
  url: '/addRental',
  method: 'POST',
  statusCode: null,
  client: 
   { _connecting: false,
     _handle: 
      { fd: 16,
        writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread],
        reading: true },
     _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: true,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     onend: [Function],
     destroyed: false,
     bytesRead: 1145,
     _bytesDispatched: 2550,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        _connections: 3,
        connections: [Getter/Setter],
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        allowHalfOpen: true,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _connectionKey: '4:0.0.0.0:3000' },
     _idleTimeout: 120000,
     _idleNext: 
      { [Function: utcDate]
        _onTimeout: [Function],
        _idleTimeout: 991,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 1426016970010,
        _monotonicStartTime: 1606696 },
     _idlePrev: { _idleNext: [Circular], _idlePrev: [Object] },
     _idleStart: 1426016970010,
     _monotonicStartTime: 1606696,
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: true,
        _header: 'HTTP/1.1 200 OK\r\nX-Powered-By: Express\r\nContent-Type: text/html; charset=utf-8\r\nContent-Length: 2224\r\nETag: W/"4tPwNBBFJfQJ3q91pd8Bwg=="\r\nset-cookie: connect.sid=s%3AcUzrHQ1s8Ob4uXw_pWdAGewEnCbFi2lM.tsRIsiWULNF%2FJZ7xV6iokDfOnSVJ7Jk60DCstBx6YYE; Path=/; HttpOnly\r\nDate: Tue, 10 Mar 2015 19:49:30 GMT\r\nConnection: keep-alive\r\n\r\n',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        __onFinished: [Object],
        writeHead: [Function: writeHead],
        end: [Function: end],
        statusCode: 200 },
     _peername: { address: '127.0.0.1', family: 'IPv4', port: 45011 } },
  _consuming: false,
  _dumped: false,
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/addRental',
  _parsedUrl: 
   { protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/addRental',
     path: '/addRental',
     href: '/addRental',
     _raw: '/addRental' },
  params: {},
  query: {},
  res: 
   { domain: null,
     _events: { finish: [Object], end: [Function: onevent] },
     _maxListeners: 10,
     output: [],
     outputEncodings: [],
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _headerSent: true,
     _header: 'HTTP/1.1 200 OK\r\nX-Powered-By: Express\r\nContent-Type: text/html; charset=utf-8\r\nContent-Length: 2224\r\nETag: W/"4tPwNBBFJfQJ3q91pd8Bwg=="\r\nset-cookie: connect.sid=s%3AcUzrHQ1s8Ob4uXw_pWdAGewEnCbFi2lM.tsRIsiWULNF%2FJZ7xV6iokDfOnSVJ7Jk60DCstBx6YYE; Path=/; HttpOnly\r\nDate: Tue, 10 Mar 2015 19:49:30 GMT\r\nConnection: keep-alive\r\n\r\n',
     _hasBody: true,
     _trailer: '',
     finished: false,
     _hangupClose: false,
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        onend: [Function],
        destroyed: false,
        bytesRead: 1145,
        _bytesDispatched: 2550,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 1426016970010,
        _monotonicStartTime: 1606696,
        parser: [Object],
        ondata: [Function],
        _paused: false,
        _httpMessage: [Circular],
        _peername: [Object] },
     connection: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        onend: [Function],
        destroyed: false,
        bytesRead: 1145,
        _bytesDispatched: 2550,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 1426016970010,
        _monotonicStartTime: 1606696,
        parser: [Object],
        ondata: [Function],
        _paused: false,
        _httpMessage: [Circular],
        _peername: [Object] },
     _headers: 
      { 'x-powered-by': 'Express',
        'content-type': 'text/html; charset=utf-8',
        'content-length': '2224',
        etag: 'W/"4tPwNBBFJfQJ3q91pd8Bwg=="',
        'set-cookie': [Object] },
     _headerNames: 
      { 'x-powered-by': 'X-Powered-By',
        'content-type': 'Content-Type',
        'content-length': 'Content-Length',
        etag: 'ETag',
        'set-cookie': 'set-cookie' },
     req: [Circular],
     locals: {},
     __onFinished: { [Function: listener] queue: [Object] },
     writeHead: [Function: writeHead],
     end: [Function: end],
     statusCode: 200 },
  _startAt: [ 1606, 373142541 ],
  _startTime: Tue Mar 10 2015 15:49:29 GMT-0400 (EDT),
  _remoteAddress: '127.0.0.1',
  body: {},
  secret: undefined,
  cookies: { 'connect.sid': 's:jLyU9adFpqPkm3VV-AI7v9nlvWCYQ_AI.P5aIo8jBNJiCKzLcsBB1Zj93KCLCeA/5hjHDdyKdj1M' },
  signedCookies: {},
  _parsedOriginalUrl: 
   { protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/addRental',
     path: '/addRental',
     href: '/addRental',
     _raw: '/addRental' },
  sessionStore: 
   { sessions: { cUzrHQ1s8Ob4uXw_pWdAGewEnCbFi2lM: '{"cookie":{"originalMaxAge":null,"expires":null,"httpOnly":true,"path":"/"},"passport":{}}' },
     generate: [Function],
     _events: { disconnect: [Function], connect: [Function] } },
  sessionID: 'cUzrHQ1s8Ob4uXw_pWdAGewEnCbFi2lM',
  session: 
   { cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true },
     passport: {} },
  flash: [Function: _flash],
  _passport: 
   { instance: 
      { _key: 'passport',
        _strategies: [Object],
        _serializers: [Object],
        _deserializers: [Object],
        _infoTransformers: [],
        _framework: [Object],
        _userProperty: 'user',
        Authenticator: [Function: Authenticator],
        Passport: [Function: Authenticator],
        Strategy: [Object],
        strategies: [Object] },
     session: {} },
  route: 
   { path: '/addRental',
     stack: [ [Object] ],
     methods: { post: true } } }
undefined
[0mPOST /addRental [32m200 [0m360.184 ms - 2224[0m
[0mGET /stylesheets/style.css [36m304 [0m7.427 ms - -[0m
[0mGET /js/utils.js [36m304 [0m2.757 ms - -[0m
